import Layout from "@/components/Layout";
import Navbar from "@/components/Navbar";
import HeroSection from "@/sections/HeroSection";
import AboutSection from "@/sections/AboutSection";
import ServicesSection from "@/sections/ServicesSection";
import TestimonialsSection from "@/sections/TestimonialsSection";
import GallerySection from "@/sections/GallerySection";
import BusinessOverviewSection from "@/sections/BusinessOverviewSection";
import FAQSection from "@/sections/FAQSection";
import ServiceAreasSection from "@/sections/ServiceAreasSection";
import ServiceHighlightsSection from "@/sections/ServiceHighlightsSection";
import FooterSection from "@/sections/FooterSection";
import CTASection from "@/sections/CTASection";
import { LandingPageData } from "@/types/template";
import CompanyDetails from "@/sections/CompanyDetails";
import { getLandingPageData } from "@/lib/data";
import { notFound } from "next/navigation";
import { Metadata } from "next";
import Link from "next/link";

// Enable ISR with 60-second revalidation
export const revalidate = 60;

// Generate static params for all published landing pages
export async function generateStaticParams() {
  // For now, we'll use the environment variables to generate the single page
  // In the future, this could be expanded to generate multiple pages
  const templateId = process.env.NEXT_PUBLIC_TEMPLATE_ID;
  const id = process.env.NEXT_PUBLIC_ID;
  
  if (!templateId || !id) {
    console.warn('Missing NEXT_PUBLIC_TEMPLATE_ID or NEXT_PUBLIC_ID environment variables');
    return [];
  }

  return [{ templateId, id }];
}

// Server-side data fetching for SSG
async function getLandingPageDataForPage(): Promise<LandingPageData> {
  const landingPageData = await getLandingPageData();

  if (!landingPageData) {
    notFound();
  }

  return landingPageData;
}

// Generate metadata for Next.js App Router
export async function generateMetadata(): Promise<Metadata> {
  const landingPageData = await getLandingPageData();
  if (!landingPageData) {
    return {
      title: "Create Next App",
      description: "Generated by create next app",
    };
  }
  const { seoData, businessName, images } = landingPageData;
  
  // Get images for Open Graph
  const logoImage = images?.find((img) => img.slotName === 'logo-image')?.imageUrl;
  const heroImage = images?.find((img) => img.slotName === 'hero-image-1' || img.category === 'hero')?.imageUrl;
  const ogImage = logoImage || heroImage;
  
  return {
    title: seoData.title,
    description: seoData.description,
    keywords: seoData.keywords?.join(', '),
    authors: [{ name: businessName }],
    creator: businessName,
    publisher: businessName,
    robots: seoData.isIndex ? 'index,follow' : 'noindex,nofollow',
    
    // Open Graph
    openGraph: {
      title: seoData.title,
      description: seoData.description,
      url: seoData.canonicalUrl,
      siteName: businessName,
      images: ogImage ? [{
        url: ogImage,
        alt: `${businessName} - ${seoData.title}`,
      }] : [],
      locale: 'en_US',
      type: 'website',
    },
    
    // Twitter
    twitter: {
      card: 'summary_large_image',
      title: seoData.title,
      description: seoData.description,
      images: ogImage ? [ogImage] : [],
    },
    
    // Additional metadata
    alternates: {
      canonical: seoData.canonicalUrl,
    },
    
    // Verification and other meta tags
    other: {
      'theme-color': landingPageData.themeData?.primaryColor,
      'focused-keywords': seoData.focusedKeywords?.join(', ') || '',
    },
  };
}

export default async function Home() {
  const landingPageData = await getLandingPageDataForPage();

  return (
    <Layout
      title={landingPageData.seoData.title}
      description={landingPageData.seoData.description}
      theme={landingPageData.themeData}
      seoData={landingPageData.seoData}
      landingPageData={landingPageData}
    >
      <div className="animate-fade-in-up">
        <Navbar />
        <main>
          {landingPageData.content.hero && (
            <HeroSection />
          )}

          {landingPageData.content.serviceHighlights && (
            <ServiceHighlightsSection />
          )}

          {landingPageData.content.about && (
            <AboutSection />
          )}

          {landingPageData.content.companyDetails && (
            <CompanyDetails />
          )}
{landingPageData.content.ctaSection && (
            <CTASection />
          )}
          {landingPageData.content.services && (
            <ServicesSection/>
          )}

         

          {landingPageData.content.testimonials && (
            <TestimonialsSection />
          )}

          

          {landingPageData.content.gallery && (
            <GallerySection />
          )}

          {landingPageData.content.businessOverview && (
            <BusinessOverviewSection />
          )}

          {landingPageData.content.faq && (
            <FAQSection />
          )}

          {landingPageData.businessData.serviceAreas &&
            landingPageData.businessData.serviceAreas.length > 0 && (
              <ServiceAreasSection />
            )}

          <FooterSection />
        </main>
      </div>
    </Layout>
  );
}
